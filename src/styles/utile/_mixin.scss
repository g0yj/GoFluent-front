@use "./variables" as *;

@mixin flex($direction: row, $flex: none, $x: initial, $y: initial) {
  display: flex;
  justify-content: $x;
  align-items: $y;
  flex-direction: $direction;
  @content;
}
@mixin flexColumn {
  @include flex($direction: column);
  @content;
}
@mixin flexBetween {
  @include flex($x: space-between, $y: center);
  @content;
}
@mixin flexAround {
  @include flex($x: space-around, $y: center);
  @content;
}
@mixin flexYCenter {
  @include flex($x: flex-start, $y: center);
  @content;
}
@mixin flexXCenter {
  @include flex($x: center, $y: flex-start);
  @content;
}
@mixin flexCenter {
  @include flex($x: center, $y: center);
  @content;
}
@mixin layoutBetween {
  @include flexBetween;

  & > div {
    @include flexYCenter;
  }
}

@mixin bgi($img, $bgp: 0 0, $size: contain, $active: false, $file: ".png") {
  background-repeat: no-repeat;
  background-size: $size;
  background-position: $bgp;
  image-rendering: -webkit-optimize-contrast;

  @if $active {
    background-image: url($imgurl + $img + $file);

    &.active {
      background-image: url($imgurl + $img + "_on" + $file);
    }
  } @else {
    background-image: url($imgurl + $img);
  }
}

@mixin mask($img, $bgp: 0 0, $size: contain) {
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: $size;
  -webkit-mask-image: url($imgurl + $img);
  -webkit-mask-position: $bgp;
}

// 3/1
@mixin width($w) {
  width: round(calc($w / 3)) + px;
}
@mixin height($h) {
  height: round(calc($h / 3)) + px;
}
@mixin size($w, $h) {
  width: round(calc($w / 3)) + px;
  height: round(calc($h / 3)) + px;
}
@mixin txtSize($t) {
  font-size: round(calc($t / 3)) + px;
}
@mixin marginTop($m) {
  margin-top: round(calc($m / 3)) + px;
}
@mixin paddingTop($p) {
  padding-top: round(calc($p / 3)) + px;
}

@function cal($v) {
  @return round(calc($v / 3)) + px;
}

// ui
@mixin uiLayout {
  @media (max-width: calc($pc-width + ($content_space * 2))) {
    @content;
  }
}
@mixin uiminLayout {
  @media (min-width: calc($pc-width + ($content_space * 2))) {
    @content;
  }
}
@mixin uiPcLarge {
  @media (max-width: $ui-pc-large) {
    @content;
  }
}
@mixin uiPcLargeMin {
  @media (min-width: $ui-pc-large) {
    @content;
  }
}

// res
@mixin pcRes {
  @media (max-width: 1320px) {
    @content;
  }
}
@mixin pcLarge {
  @media (max-width: 1160px) {
    @content;
  }
}
@mixin pcSmall {
  @media (max-width: 1280px) {
    @content;
  }
}
@mixin pcSmallOnly {
  @media (max-width: 1280px) and (min-width: 769px) {
    @content;
  }
}
@mixin pcXsSmall {
  @media (max-width: 1000px) {
    @content;
  }
}
@mixin pc {
  @media (min-width: 1280px) {
    @content;
  }
}
@mixin pcAll {
  @media (min-width: 769px) {
    @content;
  }
}
@mixin tablet {
  @media (max-width: 768px) {
    @content;
  }
}
@mixin mobile {
  @media (max-width: 480px) {
    @content;
  }
}
@mixin mobile2 {
  @media (max-width: 420px) {
    @content;
  }
}
@mixin mobileSmall {
  @media (max-width: 375px) {
    @content;
  }
}
@mixin mobileXsSmall {
  @media (max-width: 320px) {
    @content;
  }
}
// res
@mixin resItemProduct {
  @at-root .product-detail.res-item-list {
    @include pcAll {
      @content;
    }
  }
}

// line
@mixin line($w: 1px, $h: 13px, $c: $line_light) {
  content: "";
  width: $w;
  height: $h;
  background-color: $c;
  @content;
}

// ellipsis
@mixin ellipsis($line: 1) {
  @if ($line == 1) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $line;
  }
  word-break: break-all;
}
// hidden
@mixin hidden {
  text-indent: -9999em;
  overflow: hidden;
}

// thumb
@mixin thumb($w, $h) {
  .thumb {
    position: relative;
    flex: none;
    width: $w;
    height: $h;
    overflow: hidden;
    cursor: pointer;

    img {
      transition: all 0.3s;
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  &:hover {
    .thumb {
      img {
        transform: scale(1.07);
      }
    }
  }
}

// center
@mixin center {
  transform: translate(-50%, -50%);
  position: absolute;
  left: 50%;
  top: 50%;
}

// function
@function half($n) {
  @return calc($n / 2) + px;
}

// drag none
@mixin dragNone {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
}

@mixin scroll {
  &::-webkit-scrollbar-track {
    background-color: #f1f1f1;
  }

  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 10px;
    background-color: #d9d9d9;
  }
}
